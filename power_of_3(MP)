__________________Method -1 _______________

class Solution {
    public boolean isPowerOfThree(int n) {
        
        if (n < 1) {                 time O(logbase3n)  space O(1)
            return false;
        }

        while (n % 3 == 0 && n!=0) {
            n /= 3;
        }

        return n == 1;
    }
}

______________________-Method 2___________________


In particular, n is of type int. In Java, this means it is a 4 byte. The maximum value of this data type is 2147483647.
Knowing the limitation of n, we can now deduce that the maximum value of n that is also a power of three is 1162261467.
We calculate this as:
3^⌊logbase(3)MaxInt⌋ = 3^⌊19.56⌋ = 3^19 =1162261467

since 3 is a prime number so, the only divisiors of 3^19 are 3^0,3^1,3^2.....3^19
therefore all we need to do is divide 3^19 by n 
 A remainder of 0 means n is a divisor of 3^19
 and therefore a power of three.
 
 
 
 class Solution {
   public boolean isPowerOfThree(int n) {
        return n>0 && 1162261467 % n == 0 ;
   }
}

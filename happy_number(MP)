_______________________Method 1 ______________________


A happy number is a number defined by the following process:

--> Starting with any positive integer, replace the number by the sum of the squares of its digits.
--> Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.
--> Those numbers for which this process ends in 1 are happy.
--> Return true if n is a happy number, and false if not.


Input: n = 19
Output: true
Explanation:
12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1


class Solution {
    public boolean isHappy(int n) {
         Set<Integer> set = new HashSet<>();
        while(n!=1 && set.contains(n)!=true)
        {
            set.add(n); 
            n = squreSum(n);    
        }                                               time O(logn)      space - O(logn)
        if(n==1)
            return true;
        return false;
       
    }
    int squreSum(int n)
    {
        int sum=0;
        while(n>0)
        {
            int n1= n%10;
            sum = sum + n1*n1;
            n=n/10;
        }
        return sum;
    }
}
